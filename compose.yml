networks:
  app-tier:
    driver: bridge

services:
  pinger:
    image: pinger
    build: ./pinger
    networks:
      - app-tier    
  pinger-consumer:
    image: pinger-consumer
    build: ./pinger-consumer
    networks:
      - app-tier    
  zookeeper:
    image: bitnami/zookeeper:latest
    networks:
      - app-tier    
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
  kafka:
    image: "bitnami/kafka:latest"
    networks:
      - app-tier    
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
      # - KAFKA_CFG_NODE_ID=0
      # - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      # - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER





# 1. use a volume for kafka to store the data:
# kafka:
#   volumes:    - /path/to/kafka-persistence:/bitnami/kafka
# NOTE: As this is a non-root container, the mounted files and directories must have the proper permissions for the UID 1001.

# 3. deploy to kubernetes
# https://hub.docker.com/r/bitnami/kafka

